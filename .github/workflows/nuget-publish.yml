# .github/workflows/dotnet-ci.yml
name: Build, Test, Benchmark and Publish NuGet Package

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
    paths-ignore:
      - "**/coverage.svg"
  pull_request:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'     
            
      - name: Restore
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore --configuration Release    

      - name: Test and Collect Coverage
        run: dotnet test tests/SteamId.Net.Tests/SteamId.Net.Tests.csproj --no-build --configuration Release --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=lcov
        
      - uses: ImBIOS/lcov-coverage-badge@v1
        with:
          file: ./tests/SteamId.Net.Tests/coverage.info
          access_token: ${{ secrets.COVERAGE_TOKEN }}
          style: flat
          icon_name: googlecloud
          icon_color: 'ffffff'
          label: 'Coverage'
          label_color: 'ffffff'
          critical: 60
          criticalColor: '9c2c9c'
          warning: 75
          warningColor: 'd68f0c'
          success_color: '43ad43'
          message_color: 'ffffff'
  
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'
          
      - name: Restore
        run: dotnet restore
        
      - name: Build
        run: dotnet build -c Release
        
      - name: Run Benchmarks
        run: dotnet run --project benchmarks/SteamId.Net.Benchmark/SteamId.Net.Benchmark.csproj -c Release -- --filter * --join
        
      - name: Debug Benchmark Files
        run: ls -R benchmarks/SteamId.Net.Benchmark/bin/Release || echo "No benchmark results found"    
        
      - name: Commit Benchmark Results to README
        run: |
          # Hier wird die generierte Markdown-Datei zu deinem README hinzugefÃ¼gt
          echo "### Benchmark Results" >> README.md
          cat bin/Release/net9.0/BenchmarkDotNet.Artifacts/results/benchmark-results.md >> README.md
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "Update Benchmark Results"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.COVERAGE_TOKEN }}

  publish:
    name: Publish NuGet Package
    runs-on: ubuntu-latest
    needs: [test, benchmark]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release

      - name: Pack with tag version
        run: dotnet pack -c Release -p:PackageVersion=${{ env.VERSION }} -o out

      - name: Push to NuGet
        run: dotnet nuget push "out/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
